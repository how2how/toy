{'TMP': 'C:\\Users\\ll\\AppData\\Local\\Temp', 'COMPUTERNAME': 'DESKTOP-JG706CD', 'USERDOMAIN': 'DESKTOP-JG706CD', 'PSMODULEPATH': 'C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules', 'COMMONPROGRAMFILES': 'C:\\Program Files (x86)\\Common Files', 'PROCESSOR_IDENTIFIER': 'Intel64 Family 6 Model 78 Stepping 3, GenuineIntel', 'VBOX_MSI_INSTALL_PATH': 'C:\\Program Files\\Oracle\\VirtualBox\\', 'PROGRAMFILES': 'C:\\Program Files (x86)', 'PROCESSOR_REVISION': '4e03', 'MAVEN_HOME': 'C:\\Users\\ll\\Downloads\\Programs\\apache-maven-3.5.0', 'PATH': 'C:\\Python27\\Lib\\site-packages\\gnome;C:\\ProgramData\\Oracle\\Java\\javapath;C:\\Python27\\;C:\\Python27\\Scripts;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\Intel\\WiFi\\bin\\;C:\\Program Files\\Common Files\\Intel\\WirelessCommon\\;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\nodejs\\;C:\\MinGit\\cmd;C:\\MongoDB\\Server\\3.0\\bin;C:\\Program Files (x86)\\swigwin-3.0.12;C:\\Users\\ll\\Downloads\\Programs\\apache-maven-3.5.0\\bin;C:\\Program Files\\Java\\jdk1.8.0_141\\bin;C:\\Program Files (x86)\\UltraCompare;C:\\Users\\ll\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\ll\\AppData\\Roaming\\npm;c:\\python27\\KvDesigner;C:\\Program Files (x86)\\Java\\jdk1.8.0_141\\jre\\bin\\server;C:\\Program Files (x86)\\wkhtmltopdf\\bin;;C:\\Python27\\lib\\site-packages\\pywin32_system32', 'PROGRAMFILES(X86)': 'C:\\Program Files (x86)', 'COMSPEC': 'C:\\WINDOWS\\system32\\cmd.exe', 'JDK_HOME': 'C:\\Program Files\\Java (x86)\\jdk1.8.0_141', 'TEMP': 'C:\\Users\\ll\\AppData\\Local\\Temp', 'COMMONPROGRAMFILES(X86)': 'C:\\Program Files (x86)\\Common Files', 'PROCESSOR_ARCHITECTURE': 'x86', 'SYSTEMROOT': 'C:\\WINDOWS', 'ALLUSERSPROFILE': 'C:\\ProgramData', 'LOCALAPPDATA': 'C:\\Users\\ll\\AppData\\Local', 'FPS_BROWSER_USER_PROFILE_STRING': 'Default', 'HOMEPATH': '\\Users\\ll', 'USERDOMAIN_ROAMINGPROFILE': 'DESKTOP-JG706CD', 'JAVA_HOME': 'C:\\Program Files (x86)\\Java\\jdk1.8.0_141', 'PROGRAMW6432': 'C:\\Program Files', 'USERNAME': 'll', 'LOGONSERVER': '\\\\DESKTOP-JG706CD', 'PROMPT': '$P$G', 'SESSIONNAME': 'Console', 'PROGRAMDATA': 'C:\\ProgramData', 'ONEDRIVE': 'C:\\Users\\ll\\OneDrive', 'FPS_BROWSER_APP_PROFILE_STRING': 'Internet Explorer', 'PATHEXT': '.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC', 'ASL.LOG': 'Destination=file', 'WINDIR': 'C:\\WINDOWS', 'APPDATA': 'C:\\Users\\ll\\AppData\\Roaming', 'HOMEDRIVE': 'C:', 'SYSTEMDRIVE': 'C:', 'NUMBER_OF_PROCESSORS': '4', 'PROCESSOR_LEVEL': '6', 'PROCESSOR_ARCHITEW6432': 'AMD64', 'JRE_HOME': 'C:\\Program Files\\Java\\jre1.8.0_131', 'COMMONPROGRAMW6432': 'C:\\Program Files\\Common Files', 'OS': 'Windows_NT', 'PUBLIC': 'C:\\Users\\Public', 'USERPROFILE': 'C:\\Users\\ll'}